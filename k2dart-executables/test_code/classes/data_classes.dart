class SomeClass
{
}


/* data */ class A/* (val a:int, val b:String, var c:SomeClass) */
{
final int a;
final String b;
SomeClass c;

A(this.a,this.b,this.c,);

A copyWith({
   int? a,
   String? b,
   SomeClass? c,
}) {
  return A(
    a: a ?? this.a,
    b: b ?? this.b,
    c: c ?? this.c,
  );
}

// AUTOGENERATED METHOD
//TODO for maps substitute <field>==other.<field> with mapEquals(<field>,other.<field>
//TODO for lists substitute <field>==other.<field> with listEquals(<field>,other.<field>
@override
bool operator ==(Object other) =>
     identical(this, other) ||
     other is A &&
     runtimeType == other.runtimeType &&
     a == other.a &&
     b == other.b &&
     c == other.c;

@override
int get hashCode => a.hashCode ^ b.hashCode ^ c.hashCode;
}



/* data */ class B/* (val c:String, var d:double) */ {
    final String c;
double d;

B(this.c,this.d,);

B copyWith({
   String? c,
   double? d,
}) {
  return B(
    c: c ?? this.c,
    d: d ?? this.d,
  );
}

// AUTOGENERATED METHOD
//TODO for maps substitute <field>==other.<field> with mapEquals(<field>,other.<field>
//TODO for lists substitute <field>==other.<field> with listEquals(<field>,other.<field>
@override
bool operator ==(Object other) =>
     identical(this, other) ||
     other is B &&
     runtimeType == other.runtimeType &&
     c == other.c &&
     d == other.d;

@override
int get hashCode => c.hashCode ^ d.hashCode;
void someMethod() { print("Hi"); }
}
