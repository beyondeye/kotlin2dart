19:49:37.008 [main] DEBUG com.pinterest.ktlint.internal.PrintASTSubCommand - Analyzing C:\startup\WORK\sel_app\TOOLS\K2DART\kotlin2dart\k2dart-executables\.\test_code\classes\getter_and_setter.kts
 1: ~.psi.KtFile (FILE)
 1:   ~.psi.KtPackageDirective (PACKAGE_DIRECTIVE) ""
 1:   ~.psi.KtImportList (IMPORT_LIST) ""
 1:   ~.psi.KtScript (SCRIPT)
 1:     ~.psi.KtBlockExpression (BLOCK)
 1:       ~.psi.KtClass (CLASS)
 1:         ~.c.i.p.impl.source.tree.LeafPsiElement (CLASS_KEYWORD) "class"
 1:         ~.c.i.p.impl.source.tree.PsiWhiteSpaceImpl (WHITE_SPACE) " "
 1:         ~.c.i.p.impl.source.tree.LeafPsiElement (IDENTIFIER) "A"
 1:         ~.c.i.p.impl.source.tree.PsiWhiteSpaceImpl (WHITE_SPACE) " "
 1:         ~.psi.KtClassBody (CLASS_BODY)
 1:           ~.c.i.p.impl.source.tree.LeafPsiElement (LBRACE) "{"
 1:           ~.c.i.p.impl.source.tree.PsiWhiteSpaceImpl (WHITE_SPACE) "\n    "
 2:           ~.psi.KtProperty (PROPERTY)
 2:             ~.c.i.p.impl.source.tree.LeafPsiElement (VAL_KEYWORD) "val"
 2:             ~.c.i.p.impl.source.tree.PsiWhiteSpaceImpl (WHITE_SPACE) " "
 2:             ~.c.i.p.impl.source.tree.LeafPsiElement (IDENTIFIER) "a"
 2:             ~.c.i.p.impl.source.tree.LeafPsiElement (COLON) ":"
 2:             ~.psi.KtTypeReference (TYPE_REFERENCE)
 2:               ~.psi.KtUserType (USER_TYPE)
 2:                 ~.psi.KtNameReferenceExpression (REFERENCE_EXPRESSION)
 2:                   ~.c.i.p.impl.source.tree.LeafPsiElement (IDENTIFIER) "String"
 2:             ~.c.i.p.impl.source.tree.PsiWhiteSpaceImpl (WHITE_SPACE) " "
 2:             ~.psi.KtPropertyAccessor (PROPERTY_ACCESSOR)
 2:               ~.c.i.p.impl.source.tree.LeafPsiElement (GET_KEYWORD) "get"
 2:               ~.c.i.p.impl.source.tree.LeafPsiElement (LPAR) "("
 2:               ~.c.i.p.impl.source.tree.LeafPsiElement (RPAR) ")"
 2:               ~.c.i.p.impl.source.tree.PsiWhiteSpaceImpl (WHITE_SPACE) " "
 2:               ~.psi.KtBlockExpression (BLOCK)
 2:                 ~.c.i.p.impl.source.tree.LeafPsiElement (LBRACE) "{"
 2:                 ~.c.i.p.impl.source.tree.PsiWhiteSpaceImpl (WHITE_SPACE) " "
 2:                 ~.psi.KtReturnExpression (RETURN)
 2:                   ~.c.i.p.impl.source.tree.LeafPsiElement (RETURN_KEYWORD) "return"
 2:                   ~.c.i.p.impl.source.tree.PsiWhiteSpaceImpl (WHITE_SPACE) " "
 2:                   ~.psi.KtStringTemplateExpression (STRING_TEMPLATE)
 2:                     ~.c.i.p.impl.source.tree.LeafPsiElement (OPEN_QUOTE) """
 2:                     ~.psi.KtLiteralStringTemplateEntry (LITERAL_STRING_TEMPLATE_ENTRY)
 2:                       ~.c.i.p.impl.source.tree.LeafPsiElement (REGULAR_STRING_PART) "Hi"
 2:                     ~.c.i.p.impl.source.tree.LeafPsiElement (CLOSING_QUOTE) """
 2:                 ~.c.i.p.impl.source.tree.LeafPsiElement (RBRACE) "}"
 2:           ~.c.i.p.impl.source.tree.PsiWhiteSpaceImpl (WHITE_SPACE) "\n    "
 3:           ~.psi.KtProperty (PROPERTY)
 3:             ~.c.i.p.impl.source.tree.LeafPsiElement (VAL_KEYWORD) "val"
 3:             ~.c.i.p.impl.source.tree.PsiWhiteSpaceImpl (WHITE_SPACE) " "
 3:             ~.c.i.p.impl.source.tree.LeafPsiElement (IDENTIFIER) "b"
 3:             ~.c.i.p.impl.source.tree.LeafPsiElement (COLON) ":"
 3:             ~.psi.KtTypeReference (TYPE_REFERENCE)
 3:               ~.psi.KtUserType (USER_TYPE)
 3:                 ~.psi.KtNameReferenceExpression (REFERENCE_EXPRESSION)
 3:                   ~.c.i.p.impl.source.tree.LeafPsiElement (IDENTIFIER) "String"
 3:             ~.c.i.p.impl.source.tree.PsiWhiteSpaceImpl (WHITE_SPACE) " "
 3:             ~.psi.KtPropertyAccessor (PROPERTY_ACCESSOR)
 3:               ~.c.i.p.impl.source.tree.LeafPsiElement (GET_KEYWORD) "get"
 3:               ~.c.i.p.impl.source.tree.LeafPsiElement (LPAR) "("
 3:               ~.c.i.p.impl.source.tree.LeafPsiElement (RPAR) ")"
 3:               ~.c.i.p.impl.source.tree.PsiWhiteSpaceImpl (WHITE_SPACE) " "
 3:               ~.c.i.p.impl.source.tree.LeafPsiElement (EQ) "="
 3:               ~.c.i.p.impl.source.tree.PsiWhiteSpaceImpl (WHITE_SPACE) " "
 3:               ~.psi.KtStringTemplateExpression (STRING_TEMPLATE)
 3:                 ~.c.i.p.impl.source.tree.LeafPsiElement (OPEN_QUOTE) """
 3:                 ~.psi.KtLiteralStringTemplateEntry (LITERAL_STRING_TEMPLATE_ENTRY)
 3:                   ~.c.i.p.impl.source.tree.LeafPsiElement (REGULAR_STRING_PART) "Hello"
 3:                 ~.c.i.p.impl.source.tree.LeafPsiElement (CLOSING_QUOTE) """
 3:           ~.c.i.p.impl.source.tree.PsiWhiteSpaceImpl (WHITE_SPACE) "\n\n    "
 5:           ~.psi.KtProperty (PROPERTY)
 5:             ~.c.i.p.impl.source.tree.LeafPsiElement (VAR_KEYWORD) "var"
 5:             ~.c.i.p.impl.source.tree.PsiWhiteSpaceImpl (WHITE_SPACE) " "
 5:             ~.c.i.p.impl.source.tree.LeafPsiElement (IDENTIFIER) "c"
 5:             ~.c.i.p.impl.source.tree.LeafPsiElement (COLON) ":"
 5:             ~.psi.KtTypeReference (TYPE_REFERENCE)
 5:               ~.psi.KtUserType (USER_TYPE)
 5:                 ~.psi.KtNameReferenceExpression (REFERENCE_EXPRESSION)
 5:                   ~.c.i.p.impl.source.tree.LeafPsiElement (IDENTIFIER) "Int"
 5:             ~.c.i.p.impl.source.tree.LeafPsiElement (EQ) "="
 5:             ~.psi.KtConstantExpression (INTEGER_CONSTANT)
 5:               ~.c.i.p.impl.source.tree.LeafPsiElement (INTEGER_LITERAL) "0"
 5:             ~.c.i.p.impl.source.tree.PsiWhiteSpaceImpl (WHITE_SPACE) "\n        "
 6:             ~.psi.KtPropertyAccessor (PROPERTY_ACCESSOR)
 6:               ~.c.i.p.impl.source.tree.LeafPsiElement (SET_KEYWORD) "set"
 6:               ~.c.i.p.impl.source.tree.LeafPsiElement (LPAR) "("
 6:               ~.psi.KtParameterList (VALUE_PARAMETER_LIST)
 6:                 ~.psi.KtParameter (VALUE_PARAMETER)
 6:                   ~.c.i.p.impl.source.tree.LeafPsiElement (IDENTIFIER) "value"
 6:               ~.c.i.p.impl.source.tree.LeafPsiElement (RPAR) ")"
 6:               ~.c.i.p.impl.source.tree.PsiWhiteSpaceImpl (WHITE_SPACE) " "
 6:               ~.psi.KtBlockExpression (BLOCK)
 6:                 ~.c.i.p.impl.source.tree.LeafPsiElement (LBRACE) "{"
 6:                 ~.c.i.p.impl.source.tree.PsiWhiteSpaceImpl (WHITE_SPACE) "\n            "
 7:                 ~.psi.KtBinaryExpression (BINARY_EXPRESSION)
 7:                   ~.psi.KtNameReferenceExpression (REFERENCE_EXPRESSION)
 7:                     ~.c.i.p.impl.source.tree.LeafPsiElement (IDENTIFIER) "field"
 7:                   ~.psi.KtOperationReferenceExpression (OPERATION_REFERENCE)
 7:                     ~.c.i.p.impl.source.tree.LeafPsiElement (EQ) "="
 7:                   ~.psi.KtNameReferenceExpression (REFERENCE_EXPRESSION)
 7:                     ~.c.i.p.impl.source.tree.LeafPsiElement (IDENTIFIER) "value"
 7:                 ~.c.i.p.impl.source.tree.PsiWhiteSpaceImpl (WHITE_SPACE) "\n        "
 8:                 ~.c.i.p.impl.source.tree.LeafPsiElement (RBRACE) "}"
 8:           ~.c.i.p.impl.source.tree.PsiWhiteSpaceImpl (WHITE_SPACE) "\n\n    "
10:           ~.psi.KtProperty (PROPERTY)
10:             ~.psi.KtDeclarationModifierList (MODIFIER_LIST)
10:               ~.c.i.p.impl.source.tree.LeafPsiElement (PRIVATE_KEYWORD) "private"
10:             ~.c.i.p.impl.source.tree.PsiWhiteSpaceImpl (WHITE_SPACE) " "
10:             ~.c.i.p.impl.source.tree.LeafPsiElement (VAR_KEYWORD) "var"
10:             ~.c.i.p.impl.source.tree.PsiWhiteSpaceImpl (WHITE_SPACE) " "
10:             ~.c.i.p.impl.source.tree.LeafPsiElement (IDENTIFIER) "_d"
10:             ~.c.i.p.impl.source.tree.LeafPsiElement (COLON) ":"
10:             ~.psi.KtTypeReference (TYPE_REFERENCE)
10:               ~.psi.KtUserType (USER_TYPE)
10:                 ~.psi.KtNameReferenceExpression (REFERENCE_EXPRESSION)
10:                   ~.c.i.p.impl.source.tree.LeafPsiElement (IDENTIFIER) "Int"
10:             ~.c.i.p.impl.source.tree.LeafPsiElement (EQ) "="
10:             ~.psi.KtConstantExpression (INTEGER_CONSTANT)
10:               ~.c.i.p.impl.source.tree.LeafPsiElement (INTEGER_LITERAL) "0"
10:           ~.c.i.p.impl.source.tree.PsiWhiteSpaceImpl (WHITE_SPACE) "\n    "
11:           ~.psi.KtProperty (PROPERTY)
11:             ~.c.i.p.impl.source.tree.LeafPsiElement (VAR_KEYWORD) "var"
11:             ~.c.i.p.impl.source.tree.PsiWhiteSpaceImpl (WHITE_SPACE) " "
11:             ~.c.i.p.impl.source.tree.LeafPsiElement (IDENTIFIER) "d"
11:             ~.c.i.p.impl.source.tree.PsiWhiteSpaceImpl (WHITE_SPACE) "\n        "
12:             ~.psi.KtPropertyAccessor (PROPERTY_ACCESSOR)
12:               ~.c.i.p.impl.source.tree.LeafPsiElement (SET_KEYWORD) "set"
12:               ~.c.i.p.impl.source.tree.LeafPsiElement (LPAR) "("
12:               ~.psi.KtParameterList (VALUE_PARAMETER_LIST)
12:                 ~.psi.KtParameter (VALUE_PARAMETER)
12:                   ~.c.i.p.impl.source.tree.LeafPsiElement (IDENTIFIER) "value"
12:               ~.c.i.p.impl.source.tree.LeafPsiElement (RPAR) ")"
12:               ~.c.i.p.impl.source.tree.PsiWhiteSpaceImpl (WHITE_SPACE) " "
12:               ~.psi.KtBlockExpression (BLOCK)
12:                 ~.c.i.p.impl.source.tree.LeafPsiElement (LBRACE) "{"
12:                 ~.c.i.p.impl.source.tree.PsiWhiteSpaceImpl (WHITE_SPACE) "\n            "
13:                 ~.psi.KtBinaryExpression (BINARY_EXPRESSION)
13:                   ~.psi.KtNameReferenceExpression (REFERENCE_EXPRESSION)
13:                     ~.c.i.p.impl.source.tree.LeafPsiElement (IDENTIFIER) "_d"
13:                   ~.psi.KtOperationReferenceExpression (OPERATION_REFERENCE)
13:                     ~.c.i.p.impl.source.tree.LeafPsiElement (EQ) "="
13:                   ~.psi.KtNameReferenceExpression (REFERENCE_EXPRESSION)
13:                     ~.c.i.p.impl.source.tree.LeafPsiElement (IDENTIFIER) "value"
13:                 ~.c.i.p.impl.source.tree.PsiWhiteSpaceImpl (WHITE_SPACE) "\n        "
14:                 ~.c.i.p.impl.source.tree.LeafPsiElement (RBRACE) "}"
14:             ~.c.i.p.impl.source.tree.PsiWhiteSpaceImpl (WHITE_SPACE) "\n        "
15:             ~.psi.KtPropertyAccessor (PROPERTY_ACCESSOR)
15:               ~.c.i.p.impl.source.tree.LeafPsiElement (GET_KEYWORD) "get"
15:               ~.c.i.p.impl.source.tree.LeafPsiElement (LPAR) "("
15:               ~.c.i.p.impl.source.tree.LeafPsiElement (RPAR) ")"
15:               ~.c.i.p.impl.source.tree.PsiWhiteSpaceImpl (WHITE_SPACE) " "
15:               ~.c.i.p.impl.source.tree.LeafPsiElement (EQ) "="
15:               ~.c.i.p.impl.source.tree.PsiWhiteSpaceImpl (WHITE_SPACE) " "
15:               ~.psi.KtNameReferenceExpression (REFERENCE_EXPRESSION)
15:                 ~.c.i.p.impl.source.tree.LeafPsiElement (IDENTIFIER) "_d"
15:           ~.c.i.p.impl.source.tree.PsiWhiteSpaceImpl (WHITE_SPACE) "\n\n"
17:           ~.c.i.p.impl.source.tree.LeafPsiElement (RBRACE) "}"
17:       ~.c.i.p.impl.source.tree.PsiWhiteSpaceImpl (WHITE_SPACE) "\n\n"
19:       ~.psi.KtNamedFunction (FUN)
19:         ~.c.i.p.impl.source.tree.LeafPsiElement (FUN_KEYWORD) "fun"
19:         ~.c.i.p.impl.source.tree.PsiWhiteSpaceImpl (WHITE_SPACE) " "
19:         ~.c.i.p.impl.source.tree.LeafPsiElement (IDENTIFIER) "main"
19:         ~.psi.KtParameterList (VALUE_PARAMETER_LIST)
19:           ~.c.i.p.impl.source.tree.LeafPsiElement (LPAR) "("
19:           ~.c.i.p.impl.source.tree.LeafPsiElement (RPAR) ")"
19:         ~.c.i.p.impl.source.tree.PsiWhiteSpaceImpl (WHITE_SPACE) "\n"
20:         ~.psi.KtBlockExpression (BLOCK)
20:           ~.c.i.p.impl.source.tree.LeafPsiElement (LBRACE) "{"
20:           ~.c.i.p.impl.source.tree.PsiWhiteSpaceImpl (WHITE_SPACE) "\n\n    "
22:           ~.psi.KtProperty (PROPERTY)
22:             ~.c.i.p.impl.source.tree.LeafPsiElement (VAL_KEYWORD) "val"
22:             ~.c.i.p.impl.source.tree.PsiWhiteSpaceImpl (WHITE_SPACE) " "
22:             ~.c.i.p.impl.source.tree.LeafPsiElement (IDENTIFIER) "a"
22:             ~.c.i.p.impl.source.tree.LeafPsiElement (EQ) "="
22:             ~.psi.KtCallExpression (CALL_EXPRESSION)
22:               ~.psi.KtNameReferenceExpression (REFERENCE_EXPRESSION)
22:                 ~.c.i.p.impl.source.tree.LeafPsiElement (IDENTIFIER) "A"
22:               ~.psi.KtValueArgumentList (VALUE_ARGUMENT_LIST)
22:                 ~.c.i.p.impl.source.tree.LeafPsiElement (LPAR) "("
22:                 ~.c.i.p.impl.source.tree.LeafPsiElement (RPAR) ")"
22:           ~.c.i.p.impl.source.tree.PsiWhiteSpaceImpl (WHITE_SPACE) "\n    "
23:           ~.psi.KtCallExpression (CALL_EXPRESSION)
23:             ~.psi.KtNameReferenceExpression (REFERENCE_EXPRESSION)
23:               ~.c.i.p.impl.source.tree.LeafPsiElement (IDENTIFIER) "println"
23:             ~.psi.KtValueArgumentList (VALUE_ARGUMENT_LIST)
23:               ~.c.i.p.impl.source.tree.LeafPsiElement (LPAR) "("
23:               ~.psi.KtValueArgument (VALUE_ARGUMENT)
23:                 ~.psi.KtDotQualifiedExpression (DOT_QUALIFIED_EXPRESSION)
23:                   ~.psi.KtNameReferenceExpression (REFERENCE_EXPRESSION)
23:                     ~.c.i.p.impl.source.tree.LeafPsiElement (IDENTIFIER) "a"
23:                   ~.c.i.p.impl.source.tree.LeafPsiElement (DOT) "."
23:                   ~.psi.KtNameReferenceExpression (REFERENCE_EXPRESSION)
23:                     ~.c.i.p.impl.source.tree.LeafPsiElement (IDENTIFIER) "a"
23:               ~.c.i.p.impl.source.tree.LeafPsiElement (RPAR) ")"
23:           ~.c.i.p.impl.source.tree.PsiWhiteSpaceImpl (WHITE_SPACE) "\n    "
24:           ~.psi.KtCallExpression (CALL_EXPRESSION)
24:             ~.psi.KtNameReferenceExpression (REFERENCE_EXPRESSION)
24:               ~.c.i.p.impl.source.tree.LeafPsiElement (IDENTIFIER) "println"
24:             ~.psi.KtValueArgumentList (VALUE_ARGUMENT_LIST)
24:               ~.c.i.p.impl.source.tree.LeafPsiElement (LPAR) "("
24:               ~.psi.KtValueArgument (VALUE_ARGUMENT)
24:                 ~.psi.KtDotQualifiedExpression (DOT_QUALIFIED_EXPRESSION)
24:                   ~.psi.KtNameReferenceExpression (REFERENCE_EXPRESSION)
24:                     ~.c.i.p.impl.source.tree.LeafPsiElement (IDENTIFIER) "a"
24:                   ~.c.i.p.impl.source.tree.LeafPsiElement (DOT) "."
24:                   ~.psi.KtNameReferenceExpression (REFERENCE_EXPRESSION)
24:                     ~.c.i.p.impl.source.tree.LeafPsiElement (IDENTIFIER) "b"
24:               ~.c.i.p.impl.source.tree.LeafPsiElement (RPAR) ")"
24:           ~.c.i.p.impl.source.tree.PsiWhiteSpaceImpl (WHITE_SPACE) "\n    "
25:           ~.psi.KtBinaryExpression (BINARY_EXPRESSION)
25:             ~.psi.KtDotQualifiedExpression (DOT_QUALIFIED_EXPRESSION)
25:               ~.psi.KtNameReferenceExpression (REFERENCE_EXPRESSION)
25:                 ~.c.i.p.impl.source.tree.LeafPsiElement (IDENTIFIER) "a"
25:               ~.c.i.p.impl.source.tree.LeafPsiElement (DOT) "."
25:               ~.psi.KtNameReferenceExpression (REFERENCE_EXPRESSION)
25:                 ~.c.i.p.impl.source.tree.LeafPsiElement (IDENTIFIER) "c"
25:             ~.psi.KtOperationReferenceExpression (OPERATION_REFERENCE)
25:               ~.c.i.p.impl.source.tree.LeafPsiElement (EQ) "="
25:             ~.psi.KtConstantExpression (INTEGER_CONSTANT)
25:               ~.c.i.p.impl.source.tree.LeafPsiElement (INTEGER_LITERAL) "1"
25:           ~.c.i.p.impl.source.tree.PsiWhiteSpaceImpl (WHITE_SPACE) "\n    "
26:           ~.psi.KtCallExpression (CALL_EXPRESSION)
26:             ~.psi.KtNameReferenceExpression (REFERENCE_EXPRESSION)
26:               ~.c.i.p.impl.source.tree.LeafPsiElement (IDENTIFIER) "println"
26:             ~.psi.KtValueArgumentList (VALUE_ARGUMENT_LIST)
26:               ~.c.i.p.impl.source.tree.LeafPsiElement (LPAR) "("
26:               ~.psi.KtValueArgument (VALUE_ARGUMENT)
26:                 ~.psi.KtDotQualifiedExpression (DOT_QUALIFIED_EXPRESSION)
26:                   ~.psi.KtNameReferenceExpression (REFERENCE_EXPRESSION)
26:                     ~.c.i.p.impl.source.tree.LeafPsiElement (IDENTIFIER) "a"
26:                   ~.c.i.p.impl.source.tree.LeafPsiElement (DOT) "."
26:                   ~.psi.KtNameReferenceExpression (REFERENCE_EXPRESSION)
26:                     ~.c.i.p.impl.source.tree.LeafPsiElement (IDENTIFIER) "c"
26:               ~.c.i.p.impl.source.tree.LeafPsiElement (RPAR) ")"
26:           ~.c.i.p.impl.source.tree.PsiWhiteSpaceImpl (WHITE_SPACE) "\n\n    "
28:           ~.psi.KtBinaryExpression (BINARY_EXPRESSION)
28:             ~.psi.KtDotQualifiedExpression (DOT_QUALIFIED_EXPRESSION)
28:               ~.psi.KtNameReferenceExpression (REFERENCE_EXPRESSION)
28:                 ~.c.i.p.impl.source.tree.LeafPsiElement (IDENTIFIER) "a"
28:               ~.c.i.p.impl.source.tree.LeafPsiElement (DOT) "."
28:               ~.psi.KtNameReferenceExpression (REFERENCE_EXPRESSION)
28:                 ~.c.i.p.impl.source.tree.LeafPsiElement (IDENTIFIER) "d"
28:             ~.psi.KtOperationReferenceExpression (OPERATION_REFERENCE)
28:               ~.c.i.p.impl.source.tree.LeafPsiElement (EQ) "="
28:             ~.psi.KtConstantExpression (INTEGER_CONSTANT)
28:               ~.c.i.p.impl.source.tree.LeafPsiElement (INTEGER_LITERAL) "3"
28:           ~.c.i.p.impl.source.tree.PsiWhiteSpaceImpl (WHITE_SPACE) "\n    "
29:           ~.psi.KtCallExpression (CALL_EXPRESSION)
29:             ~.psi.KtNameReferenceExpression (REFERENCE_EXPRESSION)
29:               ~.c.i.p.impl.source.tree.LeafPsiElement (IDENTIFIER) "println"
29:             ~.psi.KtValueArgumentList (VALUE_ARGUMENT_LIST)
29:               ~.c.i.p.impl.source.tree.LeafPsiElement (LPAR) "("
29:               ~.psi.KtValueArgument (VALUE_ARGUMENT)
29:                 ~.psi.KtDotQualifiedExpression (DOT_QUALIFIED_EXPRESSION)
29:                   ~.psi.KtNameReferenceExpression (REFERENCE_EXPRESSION)
29:                     ~.c.i.p.impl.source.tree.LeafPsiElement (IDENTIFIER) "a"
29:                   ~.c.i.p.impl.source.tree.LeafPsiElement (DOT) "."
29:                   ~.psi.KtNameReferenceExpression (REFERENCE_EXPRESSION)
29:                     ~.c.i.p.impl.source.tree.LeafPsiElement (IDENTIFIER) "d"
29:               ~.c.i.p.impl.source.tree.LeafPsiElement (RPAR) ")"
29:           ~.c.i.p.impl.source.tree.PsiWhiteSpaceImpl (WHITE_SPACE) "\n\n"
31:           ~.c.i.p.impl.source.tree.LeafPsiElement (RBRACE) "}"
31:       ~.c.i.p.impl.source.tree.PsiWhiteSpaceImpl (WHITE_SPACE) "\n"

    format: <line_number:> <node.psi::class> (<node.elementType>) "<node.text>"
    legend: ~ = org.jetbrains.kotlin, c.i.p = com.intellij.psi

