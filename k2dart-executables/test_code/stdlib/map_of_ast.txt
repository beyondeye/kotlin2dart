10:00:28.824 [main] DEBUG com.pinterest.ktlint.internal.PrintASTSubCommand - Analyzing C:\startup\WORK\sel_app\TOOLS\K2DART\kotlin2dart\k2dart-executables\.\test_code\stdlib\map_of.kts
 1: ~.psi.KtFile (FILE)
 1:   ~.psi.KtPackageDirective (PACKAGE_DIRECTIVE) ""
 1:   ~.psi.KtImportList (IMPORT_LIST) ""
 1:   ~.psi.KtScript (SCRIPT)
 1:     ~.psi.KtBlockExpression (BLOCK)
 1:       ~.psi.KtClass (CLASS)
 1:         ~.c.i.p.impl.source.tree.LeafPsiElement (CLASS_KEYWORD) "class"
 1:         ~.c.i.p.impl.source.tree.PsiWhiteSpaceImpl (WHITE_SPACE) " "
 1:         ~.c.i.p.impl.source.tree.LeafPsiElement (IDENTIFIER) "Car"
 1:         ~.psi.KtPrimaryConstructor (PRIMARY_CONSTRUCTOR)
 1:           ~.psi.KtParameterList (VALUE_PARAMETER_LIST)
 1:             ~.c.i.p.impl.source.tree.LeafPsiElement (LPAR) "("
 1:             ~.psi.KtParameter (VALUE_PARAMETER)
 1:               ~.c.i.p.impl.source.tree.LeafPsiElement (VAL_KEYWORD) "val"
 1:               ~.c.i.p.impl.source.tree.PsiWhiteSpaceImpl (WHITE_SPACE) " "
 1:               ~.c.i.p.impl.source.tree.LeafPsiElement (IDENTIFIER) "producer"
 1:               ~.c.i.p.impl.source.tree.LeafPsiElement (COLON) ":"
 1:               ~.psi.KtTypeReference (TYPE_REFERENCE)
 1:                 ~.psi.KtUserType (USER_TYPE)
 1:                   ~.psi.KtNameReferenceExpression (REFERENCE_EXPRESSION)
 1:                     ~.c.i.p.impl.source.tree.LeafPsiElement (IDENTIFIER) "String"
 1:             ~.c.i.p.impl.source.tree.LeafPsiElement (COMMA) ","
 1:             ~.psi.KtParameter (VALUE_PARAMETER)
 1:               ~.c.i.p.impl.source.tree.LeafPsiElement (VAL_KEYWORD) "val"
 1:               ~.c.i.p.impl.source.tree.PsiWhiteSpaceImpl (WHITE_SPACE) " "
 1:               ~.c.i.p.impl.source.tree.LeafPsiElement (IDENTIFIER) "model"
 1:               ~.c.i.p.impl.source.tree.LeafPsiElement (COLON) ":"
 1:               ~.psi.KtTypeReference (TYPE_REFERENCE)
 1:                 ~.psi.KtUserType (USER_TYPE)
 1:                   ~.psi.KtNameReferenceExpression (REFERENCE_EXPRESSION)
 1:                     ~.c.i.p.impl.source.tree.LeafPsiElement (IDENTIFIER) "String"
 1:             ~.c.i.p.impl.source.tree.LeafPsiElement (RPAR) ")"
 1:       ~.c.i.p.impl.source.tree.PsiWhiteSpaceImpl (WHITE_SPACE) "\n"
 2:       ~.psi.KtNamedFunction (FUN)
 2:         ~.c.i.p.impl.source.tree.LeafPsiElement (FUN_KEYWORD) "fun"
 2:         ~.c.i.p.impl.source.tree.PsiWhiteSpaceImpl (WHITE_SPACE) " "
 2:         ~.c.i.p.impl.source.tree.LeafPsiElement (IDENTIFIER) "main"
 2:         ~.psi.KtParameterList (VALUE_PARAMETER_LIST)
 2:           ~.c.i.p.impl.source.tree.LeafPsiElement (LPAR) "("
 2:           ~.c.i.p.impl.source.tree.LeafPsiElement (RPAR) ")"
 2:         ~.c.i.p.impl.source.tree.PsiWhiteSpaceImpl (WHITE_SPACE) " "
 2:         ~.psi.KtBlockExpression (BLOCK)
 2:           ~.c.i.p.impl.source.tree.LeafPsiElement (LBRACE) "{"
 2:           ~.c.i.p.impl.source.tree.PsiWhiteSpaceImpl (WHITE_SPACE) "\n    "
 3:           ~.psi.KtProperty (PROPERTY)
 3:             ~.c.i.p.impl.source.tree.LeafPsiElement (VAL_KEYWORD) "val"
 3:             ~.c.i.p.impl.source.tree.PsiWhiteSpaceImpl (WHITE_SPACE) " "
 3:             ~.c.i.p.impl.source.tree.LeafPsiElement (IDENTIFIER) "a"
 3:             ~.c.i.p.impl.source.tree.PsiWhiteSpaceImpl (WHITE_SPACE) " "
 3:             ~.c.i.p.impl.source.tree.LeafPsiElement (EQ) "="
 3:             ~.c.i.p.impl.source.tree.PsiWhiteSpaceImpl (WHITE_SPACE) " "
 3:             ~.psi.KtCallExpression (CALL_EXPRESSION)
 3:               ~.psi.KtNameReferenceExpression (REFERENCE_EXPRESSION)
 3:                 ~.c.i.p.impl.source.tree.LeafPsiElement (IDENTIFIER) "mapOf"
 3:               ~.psi.KtValueArgumentList (VALUE_ARGUMENT_LIST)
 3:                 ~.c.i.p.impl.source.tree.LeafPsiElement (LPAR) "("
 3:                 ~.psi.KtValueArgument (VALUE_ARGUMENT)
 3:                   ~.psi.KtBinaryExpression (BINARY_EXPRESSION)
 3:                     ~.psi.KtStringTemplateExpression (STRING_TEMPLATE)
 3:                       ~.c.i.p.impl.source.tree.LeafPsiElement (OPEN_QUOTE) """
 3:                       ~.psi.KtLiteralStringTemplateEntry (LITERAL_STRING_TEMPLATE_ENTRY)
 3:                         ~.c.i.p.impl.source.tree.LeafPsiElement (REGULAR_STRING_PART) "hello"
 3:                       ~.c.i.p.impl.source.tree.LeafPsiElement (CLOSING_QUOTE) """
 3:                     ~.c.i.p.impl.source.tree.PsiWhiteSpaceImpl (WHITE_SPACE) " "
 3:                     ~.psi.KtOperationReferenceExpression (OPERATION_REFERENCE)
 3:                       ~.c.i.p.impl.source.tree.LeafPsiElement (IDENTIFIER) "to"
 3:                     ~.c.i.p.impl.source.tree.PsiWhiteSpaceImpl (WHITE_SPACE) " "
 3:                     ~.psi.KtStringTemplateExpression (STRING_TEMPLATE)
 3:                       ~.c.i.p.impl.source.tree.LeafPsiElement (OPEN_QUOTE) """
 3:                       ~.psi.KtLiteralStringTemplateEntry (LITERAL_STRING_TEMPLATE_ENTRY)
 3:                         ~.c.i.p.impl.source.tree.LeafPsiElement (REGULAR_STRING_PART) "world"
 3:                       ~.c.i.p.impl.source.tree.LeafPsiElement (CLOSING_QUOTE) """
 3:                 ~.c.i.p.impl.source.tree.LeafPsiElement (COMMA) ","
 3:                 ~.c.i.p.impl.source.tree.PsiWhiteSpaceImpl (WHITE_SPACE) " "
 3:                 ~.psi.KtValueArgument (VALUE_ARGUMENT)
 3:                   ~.psi.KtBinaryExpression (BINARY_EXPRESSION)
 3:                     ~.psi.KtStringTemplateExpression (STRING_TEMPLATE)
 3:                       ~.c.i.p.impl.source.tree.LeafPsiElement (OPEN_QUOTE) """
 3:                       ~.psi.KtLiteralStringTemplateEntry (LITERAL_STRING_TEMPLATE_ENTRY)
 3:                         ~.c.i.p.impl.source.tree.LeafPsiElement (REGULAR_STRING_PART) "hi"
 3:                       ~.c.i.p.impl.source.tree.LeafPsiElement (CLOSING_QUOTE) """
 3:                     ~.c.i.p.impl.source.tree.PsiWhiteSpaceImpl (WHITE_SPACE) " "
 3:                     ~.psi.KtOperationReferenceExpression (OPERATION_REFERENCE)
 3:                       ~.c.i.p.impl.source.tree.LeafPsiElement (IDENTIFIER) "to"
 3:                     ~.c.i.p.impl.source.tree.PsiWhiteSpaceImpl (WHITE_SPACE) " "
 3:                     ~.psi.KtStringTemplateExpression (STRING_TEMPLATE)
 3:                       ~.c.i.p.impl.source.tree.LeafPsiElement (OPEN_QUOTE) """
 3:                       ~.psi.KtLiteralStringTemplateEntry (LITERAL_STRING_TEMPLATE_ENTRY)
 3:                         ~.c.i.p.impl.source.tree.LeafPsiElement (REGULAR_STRING_PART) "universe"
 3:                       ~.c.i.p.impl.source.tree.LeafPsiElement (CLOSING_QUOTE) """
 3:                 ~.c.i.p.impl.source.tree.LeafPsiElement (RPAR) ")"
 3:           ~.c.i.p.impl.source.tree.PsiWhiteSpaceImpl (WHITE_SPACE) "\n    "
 4:           ~.psi.KtProperty (PROPERTY)
 4:             ~.c.i.p.impl.source.tree.LeafPsiElement (VAL_KEYWORD) "val"
 4:             ~.c.i.p.impl.source.tree.PsiWhiteSpaceImpl (WHITE_SPACE) " "
 4:             ~.c.i.p.impl.source.tree.LeafPsiElement (IDENTIFIER) "b"
 4:             ~.c.i.p.impl.source.tree.LeafPsiElement (COLON) ":"
 4:             ~.psi.KtTypeReference (TYPE_REFERENCE)
 4:               ~.psi.KtUserType (USER_TYPE)
 4:                 ~.psi.KtNameReferenceExpression (REFERENCE_EXPRESSION)
 4:                   ~.c.i.p.impl.source.tree.LeafPsiElement (IDENTIFIER) "Map"
 4:                 ~.psi.KtTypeArgumentList (TYPE_ARGUMENT_LIST)
 4:                   ~.c.i.p.impl.source.tree.LeafPsiElement (LT) "<"
 4:                   ~.psi.KtTypeProjection (TYPE_PROJECTION)
 4:                     ~.psi.KtTypeReference (TYPE_REFERENCE)
 4:                       ~.psi.KtUserType (USER_TYPE)
 4:                         ~.psi.KtNameReferenceExpression (REFERENCE_EXPRESSION)
 4:                           ~.c.i.p.impl.source.tree.LeafPsiElement (IDENTIFIER) "Int"
 4:                   ~.c.i.p.impl.source.tree.LeafPsiElement (COMMA) ","
 4:                   ~.psi.KtTypeProjection (TYPE_PROJECTION)
 4:                     ~.psi.KtTypeReference (TYPE_REFERENCE)
 4:                       ~.psi.KtUserType (USER_TYPE)
 4:                         ~.psi.KtNameReferenceExpression (REFERENCE_EXPRESSION)
 4:                           ~.c.i.p.impl.source.tree.LeafPsiElement (IDENTIFIER) "Int"
 4:                   ~.c.i.p.impl.source.tree.LeafPsiElement (GT) ">"
 4:             ~.c.i.p.impl.source.tree.PsiWhiteSpaceImpl (WHITE_SPACE) " "
 4:             ~.c.i.p.impl.source.tree.LeafPsiElement (EQ) "="
 4:             ~.c.i.p.impl.source.tree.PsiWhiteSpaceImpl (WHITE_SPACE) " "
 4:             ~.psi.KtCallExpression (CALL_EXPRESSION)
 4:               ~.psi.KtNameReferenceExpression (REFERENCE_EXPRESSION)
 4:                 ~.c.i.p.impl.source.tree.LeafPsiElement (IDENTIFIER) "mapOf"
 4:               ~.psi.KtValueArgumentList (VALUE_ARGUMENT_LIST)
 4:                 ~.c.i.p.impl.source.tree.LeafPsiElement (LPAR) "("
 4:                 ~.psi.KtValueArgument (VALUE_ARGUMENT)
 4:                   ~.psi.KtBinaryExpression (BINARY_EXPRESSION)
 4:                     ~.psi.KtConstantExpression (INTEGER_CONSTANT)
 4:                       ~.c.i.p.impl.source.tree.LeafPsiElement (INTEGER_LITERAL) "1"
 4:                     ~.c.i.p.impl.source.tree.PsiWhiteSpaceImpl (WHITE_SPACE) " "
 4:                     ~.psi.KtOperationReferenceExpression (OPERATION_REFERENCE)
 4:                       ~.c.i.p.impl.source.tree.LeafPsiElement (IDENTIFIER) "to"
 4:                     ~.c.i.p.impl.source.tree.PsiWhiteSpaceImpl (WHITE_SPACE) " "
 4:                     ~.psi.KtConstantExpression (INTEGER_CONSTANT)
 4:                       ~.c.i.p.impl.source.tree.LeafPsiElement (INTEGER_LITERAL) "2"
 4:                 ~.c.i.p.impl.source.tree.LeafPsiElement (COMMA) ","
 4:                 ~.psi.KtValueArgument (VALUE_ARGUMENT)
 4:                   ~.psi.KtBinaryExpression (BINARY_EXPRESSION)
 4:                     ~.psi.KtConstantExpression (INTEGER_CONSTANT)
 4:                       ~.c.i.p.impl.source.tree.LeafPsiElement (INTEGER_LITERAL) "3"
 4:                     ~.c.i.p.impl.source.tree.PsiWhiteSpaceImpl (WHITE_SPACE) " "
 4:                     ~.psi.KtOperationReferenceExpression (OPERATION_REFERENCE)
 4:                       ~.c.i.p.impl.source.tree.LeafPsiElement (IDENTIFIER) "to"
 4:                     ~.c.i.p.impl.source.tree.PsiWhiteSpaceImpl (WHITE_SPACE) " "
 4:                     ~.psi.KtConstantExpression (INTEGER_CONSTANT)
 4:                       ~.c.i.p.impl.source.tree.LeafPsiElement (INTEGER_LITERAL) "4"
 4:                 ~.c.i.p.impl.source.tree.LeafPsiElement (RPAR) ")"
 4:           ~.c.i.p.impl.source.tree.PsiWhiteSpaceImpl (WHITE_SPACE) "\n    "
 5:           ~.psi.KtProperty (PROPERTY)
 5:             ~.c.i.p.impl.source.tree.LeafPsiElement (VAL_KEYWORD) "val"
 5:             ~.c.i.p.impl.source.tree.PsiWhiteSpaceImpl (WHITE_SPACE) " "
 5:             ~.c.i.p.impl.source.tree.LeafPsiElement (IDENTIFIER) "c"
 5:             ~.c.i.p.impl.source.tree.LeafPsiElement (EQ) "="
 5:             ~.c.i.p.impl.source.tree.PsiWhiteSpaceImpl (WHITE_SPACE) " "
 5:             ~.psi.KtCallExpression (CALL_EXPRESSION)
 5:               ~.psi.KtNameReferenceExpression (REFERENCE_EXPRESSION)
 5:                 ~.c.i.p.impl.source.tree.LeafPsiElement (IDENTIFIER) "mapOf"
 5:               ~.psi.KtTypeArgumentList (TYPE_ARGUMENT_LIST)
 5:                 ~.c.i.p.impl.source.tree.LeafPsiElement (LT) "<"
 5:                 ~.psi.KtTypeProjection (TYPE_PROJECTION)
 5:                   ~.psi.KtTypeReference (TYPE_REFERENCE)
 5:                     ~.psi.KtUserType (USER_TYPE)
 5:                       ~.psi.KtNameReferenceExpression (REFERENCE_EXPRESSION)
 5:                         ~.c.i.p.impl.source.tree.LeafPsiElement (IDENTIFIER) "Int"
 5:                 ~.c.i.p.impl.source.tree.LeafPsiElement (COMMA) ","
 5:                 ~.psi.KtTypeProjection (TYPE_PROJECTION)
 5:                   ~.psi.KtTypeReference (TYPE_REFERENCE)
 5:                     ~.psi.KtUserType (USER_TYPE)
 5:                       ~.psi.KtNameReferenceExpression (REFERENCE_EXPRESSION)
 5:                         ~.c.i.p.impl.source.tree.LeafPsiElement (IDENTIFIER) "Int"
 5:                 ~.c.i.p.impl.source.tree.LeafPsiElement (GT) ">"
 5:               ~.psi.KtValueArgumentList (VALUE_ARGUMENT_LIST)
 5:                 ~.c.i.p.impl.source.tree.LeafPsiElement (LPAR) "("
 5:                 ~.psi.KtValueArgument (VALUE_ARGUMENT)
 5:                   ~.psi.KtBinaryExpression (BINARY_EXPRESSION)
 5:                     ~.psi.KtConstantExpression (INTEGER_CONSTANT)
 5:                       ~.c.i.p.impl.source.tree.LeafPsiElement (INTEGER_LITERAL) "3"
 5:                     ~.c.i.p.impl.source.tree.PsiWhiteSpaceImpl (WHITE_SPACE) " "
 5:                     ~.psi.KtOperationReferenceExpression (OPERATION_REFERENCE)
 5:                       ~.c.i.p.impl.source.tree.LeafPsiElement (IDENTIFIER) "to"
 5:                     ~.c.i.p.impl.source.tree.PsiWhiteSpaceImpl (WHITE_SPACE) " "
 5:                     ~.psi.KtConstantExpression (INTEGER_CONSTANT)
 5:                       ~.c.i.p.impl.source.tree.LeafPsiElement (INTEGER_LITERAL) "2"
 5:                 ~.c.i.p.impl.source.tree.LeafPsiElement (COMMA) ","
 5:                 ~.psi.KtValueArgument (VALUE_ARGUMENT)
 5:                   ~.psi.KtBinaryExpression (BINARY_EXPRESSION)
 5:                     ~.psi.KtConstantExpression (INTEGER_CONSTANT)
 5:                       ~.c.i.p.impl.source.tree.LeafPsiElement (INTEGER_LITERAL) "1"
 5:                     ~.c.i.p.impl.source.tree.PsiWhiteSpaceImpl (WHITE_SPACE) " "
 5:                     ~.psi.KtOperationReferenceExpression (OPERATION_REFERENCE)
 5:                       ~.c.i.p.impl.source.tree.LeafPsiElement (IDENTIFIER) "to"
 5:                     ~.c.i.p.impl.source.tree.PsiWhiteSpaceImpl (WHITE_SPACE) " "
 5:                     ~.psi.KtConstantExpression (INTEGER_CONSTANT)
 5:                       ~.c.i.p.impl.source.tree.LeafPsiElement (INTEGER_LITERAL) "0"
 5:                 ~.c.i.p.impl.source.tree.LeafPsiElement (RPAR) ")"
 5:           ~.c.i.p.impl.source.tree.PsiWhiteSpaceImpl (WHITE_SPACE) "\n    "
 6:           ~.psi.KtProperty (PROPERTY)
 6:             ~.c.i.p.impl.source.tree.LeafPsiElement (VAL_KEYWORD) "val"
 6:             ~.c.i.p.impl.source.tree.PsiWhiteSpaceImpl (WHITE_SPACE) " "
 6:             ~.c.i.p.impl.source.tree.LeafPsiElement (IDENTIFIER) "d"
 6:             ~.c.i.p.impl.source.tree.PsiWhiteSpaceImpl (WHITE_SPACE) " "
 6:             ~.c.i.p.impl.source.tree.LeafPsiElement (EQ) "="
 6:             ~.c.i.p.impl.source.tree.PsiWhiteSpaceImpl (WHITE_SPACE) " "
 6:             ~.psi.KtCallExpression (CALL_EXPRESSION)
 6:               ~.psi.KtNameReferenceExpression (REFERENCE_EXPRESSION)
 6:                 ~.c.i.p.impl.source.tree.LeafPsiElement (IDENTIFIER) "mapOf"
 6:               ~.psi.KtTypeArgumentList (TYPE_ARGUMENT_LIST)
 6:                 ~.c.i.p.impl.source.tree.LeafPsiElement (LT) "<"
 6:                 ~.psi.KtTypeProjection (TYPE_PROJECTION)
 6:                   ~.psi.KtTypeReference (TYPE_REFERENCE)
 6:                     ~.psi.KtUserType (USER_TYPE)
 6:                       ~.psi.KtNameReferenceExpression (REFERENCE_EXPRESSION)
 6:                         ~.c.i.p.impl.source.tree.LeafPsiElement (IDENTIFIER) "String"
 6:                 ~.c.i.p.impl.source.tree.LeafPsiElement (COMMA) ","
 6:                 ~.psi.KtTypeProjection (TYPE_PROJECTION)
 6:                   ~.psi.KtTypeReference (TYPE_REFERENCE)
 6:                     ~.psi.KtUserType (USER_TYPE)
 6:                       ~.psi.KtNameReferenceExpression (REFERENCE_EXPRESSION)
 6:                         ~.c.i.p.impl.source.tree.LeafPsiElement (IDENTIFIER) "Car"
 6:                 ~.c.i.p.impl.source.tree.LeafPsiElement (GT) ">"
 6:               ~.psi.KtValueArgumentList (VALUE_ARGUMENT_LIST)
 6:                 ~.c.i.p.impl.source.tree.LeafPsiElement (LPAR) "("
 6:                 ~.psi.KtValueArgument (VALUE_ARGUMENT)
 6:                   ~.psi.KtBinaryExpression (BINARY_EXPRESSION)
 6:                     ~.psi.KtStringTemplateExpression (STRING_TEMPLATE)
 6:                       ~.c.i.p.impl.source.tree.LeafPsiElement (OPEN_QUOTE) """
 6:                       ~.psi.KtLiteralStringTemplateEntry (LITERAL_STRING_TEMPLATE_ENTRY)
 6:                         ~.c.i.p.impl.source.tree.LeafPsiElement (REGULAR_STRING_PART) "fiat500"
 6:                       ~.c.i.p.impl.source.tree.LeafPsiElement (CLOSING_QUOTE) """
 6:                     ~.c.i.p.impl.source.tree.PsiWhiteSpaceImpl (WHITE_SPACE) " "
 6:                     ~.psi.KtOperationReferenceExpression (OPERATION_REFERENCE)
 6:                       ~.c.i.p.impl.source.tree.LeafPsiElement (IDENTIFIER) "to"
 6:                     ~.c.i.p.impl.source.tree.PsiWhiteSpaceImpl (WHITE_SPACE) " "
 6:                     ~.psi.KtCallExpression (CALL_EXPRESSION)
 6:                       ~.psi.KtNameReferenceExpression (REFERENCE_EXPRESSION)
 6:                         ~.c.i.p.impl.source.tree.LeafPsiElement (IDENTIFIER) "Car"
 6:                       ~.psi.KtValueArgumentList (VALUE_ARGUMENT_LIST)
 6:                         ~.c.i.p.impl.source.tree.LeafPsiElement (LPAR) "("
 6:                         ~.psi.KtValueArgument (VALUE_ARGUMENT)
 6:                           ~.psi.KtStringTemplateExpression (STRING_TEMPLATE)
 6:                             ~.c.i.p.impl.source.tree.LeafPsiElement (OPEN_QUOTE) """
 6:                             ~.psi.KtLiteralStringTemplateEntry (LITERAL_STRING_TEMPLATE_ENTRY)
 6:                               ~.c.i.p.impl.source.tree.LeafPsiElement (REGULAR_STRING_PART) "fiat"
 6:                             ~.c.i.p.impl.source.tree.LeafPsiElement (CLOSING_QUOTE) """
 6:                         ~.c.i.p.impl.source.tree.LeafPsiElement (COMMA) ","
 6:                         ~.psi.KtValueArgument (VALUE_ARGUMENT)
 6:                           ~.psi.KtStringTemplateExpression (STRING_TEMPLATE)
 6:                             ~.c.i.p.impl.source.tree.LeafPsiElement (OPEN_QUOTE) """
 6:                             ~.psi.KtLiteralStringTemplateEntry (LITERAL_STRING_TEMPLATE_ENTRY)
 6:                               ~.c.i.p.impl.source.tree.LeafPsiElement (REGULAR_STRING_PART) "500"
 6:                             ~.c.i.p.impl.source.tree.LeafPsiElement (CLOSING_QUOTE) """
 6:                         ~.c.i.p.impl.source.tree.LeafPsiElement (RPAR) ")"
 6:                 ~.c.i.p.impl.source.tree.LeafPsiElement (COMMA) ","
 6:                 ~.psi.KtValueArgument (VALUE_ARGUMENT)
 6:                   ~.psi.KtBinaryExpression (BINARY_EXPRESSION)
 6:                     ~.psi.KtStringTemplateExpression (STRING_TEMPLATE)
 6:                       ~.c.i.p.impl.source.tree.LeafPsiElement (OPEN_QUOTE) """
 6:                       ~.psi.KtLiteralStringTemplateEntry (LITERAL_STRING_TEMPLATE_ENTRY)
 6:                         ~.c.i.p.impl.source.tree.LeafPsiElement (REGULAR_STRING_PART) "corolla"
 6:                       ~.c.i.p.impl.source.tree.LeafPsiElement (CLOSING_QUOTE) """
 6:                     ~.c.i.p.impl.source.tree.PsiWhiteSpaceImpl (WHITE_SPACE) " "
 6:                     ~.psi.KtOperationReferenceExpression (OPERATION_REFERENCE)
 6:                       ~.c.i.p.impl.source.tree.LeafPsiElement (IDENTIFIER) "to"
 6:                     ~.c.i.p.impl.source.tree.PsiWhiteSpaceImpl (WHITE_SPACE) " "
 6:                     ~.psi.KtCallExpression (CALL_EXPRESSION)
 6:                       ~.psi.KtNameReferenceExpression (REFERENCE_EXPRESSION)
 6:                         ~.c.i.p.impl.source.tree.LeafPsiElement (IDENTIFIER) "Car"
 6:                       ~.psi.KtValueArgumentList (VALUE_ARGUMENT_LIST)
 6:                         ~.c.i.p.impl.source.tree.LeafPsiElement (LPAR) "("
 6:                         ~.psi.KtValueArgument (VALUE_ARGUMENT)
 6:                           ~.psi.KtStringTemplateExpression (STRING_TEMPLATE)
 6:                             ~.c.i.p.impl.source.tree.LeafPsiElement (OPEN_QUOTE) """
 6:                             ~.psi.KtLiteralStringTemplateEntry (LITERAL_STRING_TEMPLATE_ENTRY)
 6:                               ~.c.i.p.impl.source.tree.LeafPsiElement (REGULAR_STRING_PART) "toyota"
 6:                             ~.c.i.p.impl.source.tree.LeafPsiElement (CLOSING_QUOTE) """
 6:                         ~.c.i.p.impl.source.tree.LeafPsiElement (COMMA) ","
 6:                         ~.psi.KtValueArgument (VALUE_ARGUMENT)
 6:                           ~.psi.KtStringTemplateExpression (STRING_TEMPLATE)
 6:                             ~.c.i.p.impl.source.tree.LeafPsiElement (OPEN_QUOTE) """
 6:                             ~.psi.KtLiteralStringTemplateEntry (LITERAL_STRING_TEMPLATE_ENTRY)
 6:                               ~.c.i.p.impl.source.tree.LeafPsiElement (REGULAR_STRING_PART) "corolla"
 6:                             ~.c.i.p.impl.source.tree.LeafPsiElement (CLOSING_QUOTE) """
 6:                         ~.c.i.p.impl.source.tree.LeafPsiElement (RPAR) ")"
 6:                 ~.c.i.p.impl.source.tree.LeafPsiElement (COMMA) ","
 6:                 ~.psi.KtValueArgument (VALUE_ARGUMENT)
 6:                   ~.psi.KtBinaryExpression (BINARY_EXPRESSION)
 6:                     ~.psi.KtStringTemplateExpression (STRING_TEMPLATE)
 6:                       ~.c.i.p.impl.source.tree.LeafPsiElement (OPEN_QUOTE) """
 6:                       ~.psi.KtLiteralStringTemplateEntry (LITERAL_STRING_TEMPLATE_ENTRY)
 6:                         ~.c.i.p.impl.source.tree.LeafPsiElement (REGULAR_STRING_PART) "fiesta"
 6:                       ~.c.i.p.impl.source.tree.LeafPsiElement (CLOSING_QUOTE) """
 6:                     ~.c.i.p.impl.source.tree.PsiWhiteSpaceImpl (WHITE_SPACE) " "
 6:                     ~.psi.KtOperationReferenceExpression (OPERATION_REFERENCE)
 6:                       ~.c.i.p.impl.source.tree.LeafPsiElement (IDENTIFIER) "to"
 6:                     ~.c.i.p.impl.source.tree.PsiWhiteSpaceImpl (WHITE_SPACE) " "
 6:                     ~.psi.KtCallExpression (CALL_EXPRESSION)
 6:                       ~.psi.KtNameReferenceExpression (REFERENCE_EXPRESSION)
 6:                         ~.c.i.p.impl.source.tree.LeafPsiElement (IDENTIFIER) "Car"
 6:                       ~.psi.KtValueArgumentList (VALUE_ARGUMENT_LIST)
 6:                         ~.c.i.p.impl.source.tree.LeafPsiElement (LPAR) "("
 6:                         ~.psi.KtValueArgument (VALUE_ARGUMENT)
 6:                           ~.psi.KtStringTemplateExpression (STRING_TEMPLATE)
 6:                             ~.c.i.p.impl.source.tree.LeafPsiElement (OPEN_QUOTE) """
 6:                             ~.psi.KtLiteralStringTemplateEntry (LITERAL_STRING_TEMPLATE_ENTRY)
 6:                               ~.c.i.p.impl.source.tree.LeafPsiElement (REGULAR_STRING_PART) "ford"
 6:                             ~.c.i.p.impl.source.tree.LeafPsiElement (CLOSING_QUOTE) """
 6:                         ~.c.i.p.impl.source.tree.LeafPsiElement (COMMA) ","
 6:                         ~.psi.KtValueArgument (VALUE_ARGUMENT)
 6:                           ~.psi.KtStringTemplateExpression (STRING_TEMPLATE)
 6:                             ~.c.i.p.impl.source.tree.LeafPsiElement (OPEN_QUOTE) """
 6:                             ~.psi.KtLiteralStringTemplateEntry (LITERAL_STRING_TEMPLATE_ENTRY)
 6:                               ~.c.i.p.impl.source.tree.LeafPsiElement (REGULAR_STRING_PART) "fiesta"
 6:                             ~.c.i.p.impl.source.tree.LeafPsiElement (CLOSING_QUOTE) """
 6:                         ~.c.i.p.impl.source.tree.LeafPsiElement (RPAR) ")"
 6:                 ~.c.i.p.impl.source.tree.LeafPsiElement (RPAR) ")"
 6:           ~.c.i.p.impl.source.tree.PsiWhiteSpaceImpl (WHITE_SPACE) "\n    "
 7:           ~.psi.KtProperty (PROPERTY)
 7:             ~.c.i.p.impl.source.tree.LeafPsiElement (VAL_KEYWORD) "val"
 7:             ~.c.i.p.impl.source.tree.PsiWhiteSpaceImpl (WHITE_SPACE) " "
 7:             ~.c.i.p.impl.source.tree.LeafPsiElement (IDENTIFIER) "a1"
 7:             ~.c.i.p.impl.source.tree.PsiWhiteSpaceImpl (WHITE_SPACE) " "
 7:             ~.c.i.p.impl.source.tree.LeafPsiElement (EQ) "="
 7:             ~.c.i.p.impl.source.tree.PsiWhiteSpaceImpl (WHITE_SPACE) " "
 7:             ~.psi.KtCallExpression (CALL_EXPRESSION)
 7:               ~.psi.KtNameReferenceExpression (REFERENCE_EXPRESSION)
 7:                 ~.c.i.p.impl.source.tree.LeafPsiElement (IDENTIFIER) "mutableMapOf"
 7:               ~.psi.KtValueArgumentList (VALUE_ARGUMENT_LIST)
 7:                 ~.c.i.p.impl.source.tree.LeafPsiElement (LPAR) "("
 7:                 ~.psi.KtValueArgument (VALUE_ARGUMENT)
 7:                   ~.psi.KtBinaryExpression (BINARY_EXPRESSION)
 7:                     ~.psi.KtStringTemplateExpression (STRING_TEMPLATE)
 7:                       ~.c.i.p.impl.source.tree.LeafPsiElement (OPEN_QUOTE) """
 7:                       ~.psi.KtLiteralStringTemplateEntry (LITERAL_STRING_TEMPLATE_ENTRY)
 7:                         ~.c.i.p.impl.source.tree.LeafPsiElement (REGULAR_STRING_PART) "hello"
 7:                       ~.c.i.p.impl.source.tree.LeafPsiElement (CLOSING_QUOTE) """
 7:                     ~.c.i.p.impl.source.tree.PsiWhiteSpaceImpl (WHITE_SPACE) " "
 7:                     ~.psi.KtOperationReferenceExpression (OPERATION_REFERENCE)
 7:                       ~.c.i.p.impl.source.tree.LeafPsiElement (IDENTIFIER) "to"
 7:                     ~.c.i.p.impl.source.tree.PsiWhiteSpaceImpl (WHITE_SPACE) " "
 7:                     ~.psi.KtStringTemplateExpression (STRING_TEMPLATE)
 7:                       ~.c.i.p.impl.source.tree.LeafPsiElement (OPEN_QUOTE) """
 7:                       ~.psi.KtLiteralStringTemplateEntry (LITERAL_STRING_TEMPLATE_ENTRY)
 7:                         ~.c.i.p.impl.source.tree.LeafPsiElement (REGULAR_STRING_PART) "world"
 7:                       ~.c.i.p.impl.source.tree.LeafPsiElement (CLOSING_QUOTE) """
 7:                 ~.c.i.p.impl.source.tree.LeafPsiElement (COMMA) ","
 7:                 ~.c.i.p.impl.source.tree.PsiWhiteSpaceImpl (WHITE_SPACE) " "
 7:                 ~.psi.KtValueArgument (VALUE_ARGUMENT)
 7:                   ~.psi.KtBinaryExpression (BINARY_EXPRESSION)
 7:                     ~.psi.KtStringTemplateExpression (STRING_TEMPLATE)
 7:                       ~.c.i.p.impl.source.tree.LeafPsiElement (OPEN_QUOTE) """
 7:                       ~.psi.KtLiteralStringTemplateEntry (LITERAL_STRING_TEMPLATE_ENTRY)
 7:                         ~.c.i.p.impl.source.tree.LeafPsiElement (REGULAR_STRING_PART) "hi"
 7:                       ~.c.i.p.impl.source.tree.LeafPsiElement (CLOSING_QUOTE) """
 7:                     ~.c.i.p.impl.source.tree.PsiWhiteSpaceImpl (WHITE_SPACE) " "
 7:                     ~.psi.KtOperationReferenceExpression (OPERATION_REFERENCE)
 7:                       ~.c.i.p.impl.source.tree.LeafPsiElement (IDENTIFIER) "to"
 7:                     ~.c.i.p.impl.source.tree.PsiWhiteSpaceImpl (WHITE_SPACE) " "
 7:                     ~.psi.KtStringTemplateExpression (STRING_TEMPLATE)
 7:                       ~.c.i.p.impl.source.tree.LeafPsiElement (OPEN_QUOTE) """
 7:                       ~.psi.KtLiteralStringTemplateEntry (LITERAL_STRING_TEMPLATE_ENTRY)
 7:                         ~.c.i.p.impl.source.tree.LeafPsiElement (REGULAR_STRING_PART) "universe"
 7:                       ~.c.i.p.impl.source.tree.LeafPsiElement (CLOSING_QUOTE) """
 7:                 ~.c.i.p.impl.source.tree.LeafPsiElement (RPAR) ")"
 7:           ~.c.i.p.impl.source.tree.PsiWhiteSpaceImpl (WHITE_SPACE) "\n    "
 8:           ~.psi.KtProperty (PROPERTY)
 8:             ~.c.i.p.impl.source.tree.LeafPsiElement (VAL_KEYWORD) "val"
 8:             ~.c.i.p.impl.source.tree.PsiWhiteSpaceImpl (WHITE_SPACE) " "
 8:             ~.c.i.p.impl.source.tree.LeafPsiElement (IDENTIFIER) "b1"
 8:             ~.c.i.p.impl.source.tree.LeafPsiElement (COLON) ":"
 8:             ~.psi.KtTypeReference (TYPE_REFERENCE)
 8:               ~.psi.KtUserType (USER_TYPE)
 8:                 ~.psi.KtNameReferenceExpression (REFERENCE_EXPRESSION)
 8:                   ~.c.i.p.impl.source.tree.LeafPsiElement (IDENTIFIER) "MutableMap"
 8:                 ~.psi.KtTypeArgumentList (TYPE_ARGUMENT_LIST)
 8:                   ~.c.i.p.impl.source.tree.LeafPsiElement (LT) "<"
 8:                   ~.psi.KtTypeProjection (TYPE_PROJECTION)
 8:                     ~.psi.KtTypeReference (TYPE_REFERENCE)
 8:                       ~.psi.KtUserType (USER_TYPE)
 8:                         ~.psi.KtNameReferenceExpression (REFERENCE_EXPRESSION)
 8:                           ~.c.i.p.impl.source.tree.LeafPsiElement (IDENTIFIER) "Int"
 8:                   ~.c.i.p.impl.source.tree.LeafPsiElement (COMMA) ","
 8:                   ~.psi.KtTypeProjection (TYPE_PROJECTION)
 8:                     ~.psi.KtTypeReference (TYPE_REFERENCE)
 8:                       ~.psi.KtUserType (USER_TYPE)
 8:                         ~.psi.KtNameReferenceExpression (REFERENCE_EXPRESSION)
 8:                           ~.c.i.p.impl.source.tree.LeafPsiElement (IDENTIFIER) "Int"
 8:                   ~.c.i.p.impl.source.tree.LeafPsiElement (GT) ">"
 8:             ~.c.i.p.impl.source.tree.PsiWhiteSpaceImpl (WHITE_SPACE) " "
 8:             ~.c.i.p.impl.source.tree.LeafPsiElement (EQ) "="
 8:             ~.c.i.p.impl.source.tree.PsiWhiteSpaceImpl (WHITE_SPACE) " "
 8:             ~.psi.KtCallExpression (CALL_EXPRESSION)
 8:               ~.psi.KtNameReferenceExpression (REFERENCE_EXPRESSION)
 8:                 ~.c.i.p.impl.source.tree.LeafPsiElement (IDENTIFIER) "mutableMapOf"
 8:               ~.psi.KtValueArgumentList (VALUE_ARGUMENT_LIST)
 8:                 ~.c.i.p.impl.source.tree.LeafPsiElement (LPAR) "("
 8:                 ~.psi.KtValueArgument (VALUE_ARGUMENT)
 8:                   ~.psi.KtBinaryExpression (BINARY_EXPRESSION)
 8:                     ~.psi.KtConstantExpression (INTEGER_CONSTANT)
 8:                       ~.c.i.p.impl.source.tree.LeafPsiElement (INTEGER_LITERAL) "1"
 8:                     ~.c.i.p.impl.source.tree.PsiWhiteSpaceImpl (WHITE_SPACE) " "
 8:                     ~.psi.KtOperationReferenceExpression (OPERATION_REFERENCE)
 8:                       ~.c.i.p.impl.source.tree.LeafPsiElement (IDENTIFIER) "to"
 8:                     ~.c.i.p.impl.source.tree.PsiWhiteSpaceImpl (WHITE_SPACE) " "
 8:                     ~.psi.KtConstantExpression (INTEGER_CONSTANT)
 8:                       ~.c.i.p.impl.source.tree.LeafPsiElement (INTEGER_LITERAL) "2"
 8:                 ~.c.i.p.impl.source.tree.LeafPsiElement (COMMA) ","
 8:                 ~.psi.KtValueArgument (VALUE_ARGUMENT)
 8:                   ~.psi.KtBinaryExpression (BINARY_EXPRESSION)
 8:                     ~.psi.KtConstantExpression (INTEGER_CONSTANT)
 8:                       ~.c.i.p.impl.source.tree.LeafPsiElement (INTEGER_LITERAL) "3"
 8:                     ~.c.i.p.impl.source.tree.PsiWhiteSpaceImpl (WHITE_SPACE) " "
 8:                     ~.psi.KtOperationReferenceExpression (OPERATION_REFERENCE)
 8:                       ~.c.i.p.impl.source.tree.LeafPsiElement (IDENTIFIER) "to"
 8:                     ~.c.i.p.impl.source.tree.PsiWhiteSpaceImpl (WHITE_SPACE) " "
 8:                     ~.psi.KtConstantExpression (INTEGER_CONSTANT)
 8:                       ~.c.i.p.impl.source.tree.LeafPsiElement (INTEGER_LITERAL) "4"
 8:                 ~.c.i.p.impl.source.tree.LeafPsiElement (RPAR) ")"
 8:           ~.c.i.p.impl.source.tree.PsiWhiteSpaceImpl (WHITE_SPACE) "\n    "
 9:           ~.psi.KtProperty (PROPERTY)
 9:             ~.c.i.p.impl.source.tree.LeafPsiElement (VAL_KEYWORD) "val"
 9:             ~.c.i.p.impl.source.tree.PsiWhiteSpaceImpl (WHITE_SPACE) " "
 9:             ~.c.i.p.impl.source.tree.LeafPsiElement (IDENTIFIER) "c1"
 9:             ~.c.i.p.impl.source.tree.LeafPsiElement (EQ) "="
 9:             ~.c.i.p.impl.source.tree.PsiWhiteSpaceImpl (WHITE_SPACE) " "
 9:             ~.psi.KtCallExpression (CALL_EXPRESSION)
 9:               ~.psi.KtNameReferenceExpression (REFERENCE_EXPRESSION)
 9:                 ~.c.i.p.impl.source.tree.LeafPsiElement (IDENTIFIER) "mutableMapOf"
 9:               ~.psi.KtTypeArgumentList (TYPE_ARGUMENT_LIST)
 9:                 ~.c.i.p.impl.source.tree.LeafPsiElement (LT) "<"
 9:                 ~.psi.KtTypeProjection (TYPE_PROJECTION)
 9:                   ~.psi.KtTypeReference (TYPE_REFERENCE)
 9:                     ~.psi.KtUserType (USER_TYPE)
 9:                       ~.psi.KtNameReferenceExpression (REFERENCE_EXPRESSION)
 9:                         ~.c.i.p.impl.source.tree.LeafPsiElement (IDENTIFIER) "Int"
 9:                 ~.c.i.p.impl.source.tree.LeafPsiElement (COMMA) ","
 9:                 ~.psi.KtTypeProjection (TYPE_PROJECTION)
 9:                   ~.psi.KtTypeReference (TYPE_REFERENCE)
 9:                     ~.psi.KtUserType (USER_TYPE)
 9:                       ~.psi.KtNameReferenceExpression (REFERENCE_EXPRESSION)
 9:                         ~.c.i.p.impl.source.tree.LeafPsiElement (IDENTIFIER) "Int"
 9:                 ~.c.i.p.impl.source.tree.LeafPsiElement (GT) ">"
 9:               ~.psi.KtValueArgumentList (VALUE_ARGUMENT_LIST)
 9:                 ~.c.i.p.impl.source.tree.LeafPsiElement (LPAR) "("
 9:                 ~.psi.KtValueArgument (VALUE_ARGUMENT)
 9:                   ~.psi.KtBinaryExpression (BINARY_EXPRESSION)
 9:                     ~.psi.KtConstantExpression (INTEGER_CONSTANT)
 9:                       ~.c.i.p.impl.source.tree.LeafPsiElement (INTEGER_LITERAL) "3"
 9:                     ~.c.i.p.impl.source.tree.PsiWhiteSpaceImpl (WHITE_SPACE) " "
 9:                     ~.psi.KtOperationReferenceExpression (OPERATION_REFERENCE)
 9:                       ~.c.i.p.impl.source.tree.LeafPsiElement (IDENTIFIER) "to"
 9:                     ~.c.i.p.impl.source.tree.PsiWhiteSpaceImpl (WHITE_SPACE) " "
 9:                     ~.psi.KtConstantExpression (INTEGER_CONSTANT)
 9:                       ~.c.i.p.impl.source.tree.LeafPsiElement (INTEGER_LITERAL) "2"
 9:                 ~.c.i.p.impl.source.tree.LeafPsiElement (COMMA) ","
 9:                 ~.psi.KtValueArgument (VALUE_ARGUMENT)
 9:                   ~.psi.KtBinaryExpression (BINARY_EXPRESSION)
 9:                     ~.psi.KtConstantExpression (INTEGER_CONSTANT)
 9:                       ~.c.i.p.impl.source.tree.LeafPsiElement (INTEGER_LITERAL) "1"
 9:                     ~.c.i.p.impl.source.tree.PsiWhiteSpaceImpl (WHITE_SPACE) " "
 9:                     ~.psi.KtOperationReferenceExpression (OPERATION_REFERENCE)
 9:                       ~.c.i.p.impl.source.tree.LeafPsiElement (IDENTIFIER) "to"
 9:                     ~.c.i.p.impl.source.tree.PsiWhiteSpaceImpl (WHITE_SPACE) " "
 9:                     ~.psi.KtConstantExpression (INTEGER_CONSTANT)
 9:                       ~.c.i.p.impl.source.tree.LeafPsiElement (INTEGER_LITERAL) "0"
 9:                 ~.c.i.p.impl.source.tree.LeafPsiElement (RPAR) ")"
 9:           ~.c.i.p.impl.source.tree.PsiWhiteSpaceImpl (WHITE_SPACE) "\n    "
10:           ~.psi.KtProperty (PROPERTY)
10:             ~.c.i.p.impl.source.tree.LeafPsiElement (VAL_KEYWORD) "val"
10:             ~.c.i.p.impl.source.tree.PsiWhiteSpaceImpl (WHITE_SPACE) " "
10:             ~.c.i.p.impl.source.tree.LeafPsiElement (IDENTIFIER) "d1"
10:             ~.c.i.p.impl.source.tree.PsiWhiteSpaceImpl (WHITE_SPACE) " "
10:             ~.c.i.p.impl.source.tree.LeafPsiElement (EQ) "="
10:             ~.c.i.p.impl.source.tree.PsiWhiteSpaceImpl (WHITE_SPACE) " "
10:             ~.psi.KtCallExpression (CALL_EXPRESSION)
10:               ~.psi.KtNameReferenceExpression (REFERENCE_EXPRESSION)
10:                 ~.c.i.p.impl.source.tree.LeafPsiElement (IDENTIFIER) "mutableMapOf"
10:               ~.psi.KtTypeArgumentList (TYPE_ARGUMENT_LIST)
10:                 ~.c.i.p.impl.source.tree.LeafPsiElement (LT) "<"
10:                 ~.psi.KtTypeProjection (TYPE_PROJECTION)
10:                   ~.psi.KtTypeReference (TYPE_REFERENCE)
10:                     ~.psi.KtUserType (USER_TYPE)
10:                       ~.psi.KtNameReferenceExpression (REFERENCE_EXPRESSION)
10:                         ~.c.i.p.impl.source.tree.LeafPsiElement (IDENTIFIER) "String"
10:                 ~.c.i.p.impl.source.tree.LeafPsiElement (COMMA) ","
10:                 ~.psi.KtTypeProjection (TYPE_PROJECTION)
10:                   ~.psi.KtTypeReference (TYPE_REFERENCE)
10:                     ~.psi.KtUserType (USER_TYPE)
10:                       ~.psi.KtNameReferenceExpression (REFERENCE_EXPRESSION)
10:                         ~.c.i.p.impl.source.tree.LeafPsiElement (IDENTIFIER) "Car"
10:                 ~.c.i.p.impl.source.tree.LeafPsiElement (GT) ">"
10:               ~.psi.KtValueArgumentList (VALUE_ARGUMENT_LIST)
10:                 ~.c.i.p.impl.source.tree.LeafPsiElement (LPAR) "("
10:                 ~.psi.KtValueArgument (VALUE_ARGUMENT)
10:                   ~.psi.KtBinaryExpression (BINARY_EXPRESSION)
10:                     ~.psi.KtStringTemplateExpression (STRING_TEMPLATE)
10:                       ~.c.i.p.impl.source.tree.LeafPsiElement (OPEN_QUOTE) """
10:                       ~.psi.KtLiteralStringTemplateEntry (LITERAL_STRING_TEMPLATE_ENTRY)
10:                         ~.c.i.p.impl.source.tree.LeafPsiElement (REGULAR_STRING_PART) "fiat500"
10:                       ~.c.i.p.impl.source.tree.LeafPsiElement (CLOSING_QUOTE) """
10:                     ~.c.i.p.impl.source.tree.PsiWhiteSpaceImpl (WHITE_SPACE) " "
10:                     ~.psi.KtOperationReferenceExpression (OPERATION_REFERENCE)
10:                       ~.c.i.p.impl.source.tree.LeafPsiElement (IDENTIFIER) "to"
10:                     ~.c.i.p.impl.source.tree.PsiWhiteSpaceImpl (WHITE_SPACE) " "
10:                     ~.psi.KtCallExpression (CALL_EXPRESSION)
10:                       ~.psi.KtNameReferenceExpression (REFERENCE_EXPRESSION)
10:                         ~.c.i.p.impl.source.tree.LeafPsiElement (IDENTIFIER) "Car"
10:                       ~.psi.KtValueArgumentList (VALUE_ARGUMENT_LIST)
10:                         ~.c.i.p.impl.source.tree.LeafPsiElement (LPAR) "("
10:                         ~.psi.KtValueArgument (VALUE_ARGUMENT)
10:                           ~.psi.KtStringTemplateExpression (STRING_TEMPLATE)
10:                             ~.c.i.p.impl.source.tree.LeafPsiElement (OPEN_QUOTE) """
10:                             ~.psi.KtLiteralStringTemplateEntry (LITERAL_STRING_TEMPLATE_ENTRY)
10:                               ~.c.i.p.impl.source.tree.LeafPsiElement (REGULAR_STRING_PART) "fiat"
10:                             ~.c.i.p.impl.source.tree.LeafPsiElement (CLOSING_QUOTE) """
10:                         ~.c.i.p.impl.source.tree.LeafPsiElement (COMMA) ","
10:                         ~.psi.KtValueArgument (VALUE_ARGUMENT)
10:                           ~.psi.KtStringTemplateExpression (STRING_TEMPLATE)
10:                             ~.c.i.p.impl.source.tree.LeafPsiElement (OPEN_QUOTE) """
10:                             ~.psi.KtLiteralStringTemplateEntry (LITERAL_STRING_TEMPLATE_ENTRY)
10:                               ~.c.i.p.impl.source.tree.LeafPsiElement (REGULAR_STRING_PART) "500"
10:                             ~.c.i.p.impl.source.tree.LeafPsiElement (CLOSING_QUOTE) """
10:                         ~.c.i.p.impl.source.tree.LeafPsiElement (RPAR) ")"
10:                 ~.c.i.p.impl.source.tree.LeafPsiElement (COMMA) ","
10:                 ~.psi.KtValueArgument (VALUE_ARGUMENT)
10:                   ~.psi.KtBinaryExpression (BINARY_EXPRESSION)
10:                     ~.psi.KtStringTemplateExpression (STRING_TEMPLATE)
10:                       ~.c.i.p.impl.source.tree.LeafPsiElement (OPEN_QUOTE) """
10:                       ~.psi.KtLiteralStringTemplateEntry (LITERAL_STRING_TEMPLATE_ENTRY)
10:                         ~.c.i.p.impl.source.tree.LeafPsiElement (REGULAR_STRING_PART) "corolla"
10:                       ~.c.i.p.impl.source.tree.LeafPsiElement (CLOSING_QUOTE) """
10:                     ~.c.i.p.impl.source.tree.PsiWhiteSpaceImpl (WHITE_SPACE) " "
10:                     ~.psi.KtOperationReferenceExpression (OPERATION_REFERENCE)
10:                       ~.c.i.p.impl.source.tree.LeafPsiElement (IDENTIFIER) "to"
10:                     ~.c.i.p.impl.source.tree.PsiWhiteSpaceImpl (WHITE_SPACE) " "
10:                     ~.psi.KtCallExpression (CALL_EXPRESSION)
10:                       ~.psi.KtNameReferenceExpression (REFERENCE_EXPRESSION)
10:                         ~.c.i.p.impl.source.tree.LeafPsiElement (IDENTIFIER) "Car"
10:                       ~.psi.KtValueArgumentList (VALUE_ARGUMENT_LIST)
10:                         ~.c.i.p.impl.source.tree.LeafPsiElement (LPAR) "("
10:                         ~.psi.KtValueArgument (VALUE_ARGUMENT)
10:                           ~.psi.KtStringTemplateExpression (STRING_TEMPLATE)
10:                             ~.c.i.p.impl.source.tree.LeafPsiElement (OPEN_QUOTE) """
10:                             ~.psi.KtLiteralStringTemplateEntry (LITERAL_STRING_TEMPLATE_ENTRY)
10:                               ~.c.i.p.impl.source.tree.LeafPsiElement (REGULAR_STRING_PART) "toyota"
10:                             ~.c.i.p.impl.source.tree.LeafPsiElement (CLOSING_QUOTE) """
10:                         ~.c.i.p.impl.source.tree.LeafPsiElement (COMMA) ","
10:                         ~.psi.KtValueArgument (VALUE_ARGUMENT)
10:                           ~.psi.KtStringTemplateExpression (STRING_TEMPLATE)
10:                             ~.c.i.p.impl.source.tree.LeafPsiElement (OPEN_QUOTE) """
10:                             ~.psi.KtLiteralStringTemplateEntry (LITERAL_STRING_TEMPLATE_ENTRY)
10:                               ~.c.i.p.impl.source.tree.LeafPsiElement (REGULAR_STRING_PART) "corolla"
10:                             ~.c.i.p.impl.source.tree.LeafPsiElement (CLOSING_QUOTE) """
10:                         ~.c.i.p.impl.source.tree.LeafPsiElement (RPAR) ")"
10:                 ~.c.i.p.impl.source.tree.LeafPsiElement (COMMA) ","
10:                 ~.psi.KtValueArgument (VALUE_ARGUMENT)
10:                   ~.psi.KtBinaryExpression (BINARY_EXPRESSION)
10:                     ~.psi.KtStringTemplateExpression (STRING_TEMPLATE)
10:                       ~.c.i.p.impl.source.tree.LeafPsiElement (OPEN_QUOTE) """
10:                       ~.psi.KtLiteralStringTemplateEntry (LITERAL_STRING_TEMPLATE_ENTRY)
10:                         ~.c.i.p.impl.source.tree.LeafPsiElement (REGULAR_STRING_PART) "fiesta"
10:                       ~.c.i.p.impl.source.tree.LeafPsiElement (CLOSING_QUOTE) """
10:                     ~.c.i.p.impl.source.tree.PsiWhiteSpaceImpl (WHITE_SPACE) " "
10:                     ~.psi.KtOperationReferenceExpression (OPERATION_REFERENCE)
10:                       ~.c.i.p.impl.source.tree.LeafPsiElement (IDENTIFIER) "to"
10:                     ~.c.i.p.impl.source.tree.PsiWhiteSpaceImpl (WHITE_SPACE) " "
10:                     ~.psi.KtCallExpression (CALL_EXPRESSION)
10:                       ~.psi.KtNameReferenceExpression (REFERENCE_EXPRESSION)
10:                         ~.c.i.p.impl.source.tree.LeafPsiElement (IDENTIFIER) "Car"
10:                       ~.psi.KtValueArgumentList (VALUE_ARGUMENT_LIST)
10:                         ~.c.i.p.impl.source.tree.LeafPsiElement (LPAR) "("
10:                         ~.psi.KtValueArgument (VALUE_ARGUMENT)
10:                           ~.psi.KtStringTemplateExpression (STRING_TEMPLATE)
10:                             ~.c.i.p.impl.source.tree.LeafPsiElement (OPEN_QUOTE) """
10:                             ~.psi.KtLiteralStringTemplateEntry (LITERAL_STRING_TEMPLATE_ENTRY)
10:                               ~.c.i.p.impl.source.tree.LeafPsiElement (REGULAR_STRING_PART) "ford"
10:                             ~.c.i.p.impl.source.tree.LeafPsiElement (CLOSING_QUOTE) """
10:                         ~.c.i.p.impl.source.tree.LeafPsiElement (COMMA) ","
10:                         ~.psi.KtValueArgument (VALUE_ARGUMENT)
10:                           ~.psi.KtStringTemplateExpression (STRING_TEMPLATE)
10:                             ~.c.i.p.impl.source.tree.LeafPsiElement (OPEN_QUOTE) """
10:                             ~.psi.KtLiteralStringTemplateEntry (LITERAL_STRING_TEMPLATE_ENTRY)
10:                               ~.c.i.p.impl.source.tree.LeafPsiElement (REGULAR_STRING_PART) "fiesta"
10:                             ~.c.i.p.impl.source.tree.LeafPsiElement (CLOSING_QUOTE) """
10:                         ~.c.i.p.impl.source.tree.LeafPsiElement (RPAR) ")"
10:                 ~.c.i.p.impl.source.tree.LeafPsiElement (RPAR) ")"
10:           ~.c.i.p.impl.source.tree.PsiWhiteSpaceImpl (WHITE_SPACE) "\n"
11:           ~.c.i.p.impl.source.tree.LeafPsiElement (RBRACE) "}"
11:       ~.c.i.p.impl.source.tree.PsiWhiteSpaceImpl (WHITE_SPACE) "\n"

    format: <line_number:> <node.psi::class> (<node.elementType>) "<node.text>"
    legend: ~ = org.jetbrains.kotlin, c.i.p = com.intellij.psi

